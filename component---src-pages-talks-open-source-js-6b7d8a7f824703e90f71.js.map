{"version":3,"sources":["webpack:///./src/pages/talks-open-source.js","webpack:///./src/components/SEO.js","webpack:///./src/images/shamann-speaker.jpg"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","_images_shamann_speaker_jpg__WEBPACK_IMPORTED_MODULE_5__","_images_shamann_speaker_jpg__WEBPACK_IMPORTED_MODULE_5___default","Img","styled","img","withConfig","displayName","componentId","props","theme","breakpoint","a","createElement","Fragment","title","width","height","src","collage","alt","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","siteTitle","site","siteMetadata","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","module","exports","p"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAA,KAAAQ,GAAAR,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAAS,EAAAT,EAAAK,EAAAG,GASME,EAAMC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,sGAIc,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,aAO7BhB,EAAA,0BACbE,EAAAe,EAAAC,cAAAhB,EAAAe,EAAAE,SAAA,KACEjB,EAAAe,EAAAC,cAACb,EAAA,EAAD,CAAKe,MAAM,wBACXlB,EAAAe,EAAAC,cAACV,EAAD,CAAKa,MAAO,IAAKC,OAAQ,IAAKC,IAAKC,IAASC,IAAI,iDAChDvB,EAAAe,EAAAC,cAAA,qBACChB,EAAAe,EAAAC,cAACV,EAAD,CAAKa,MAAO,IAAKC,OAAQ,IAAKC,IAAKC,IAASC,IAAI,iDAChDvB,EAAAe,EAAAC,cAAA,qBACChB,EAAAe,EAAAC,cAACV,EAAD,CAAKa,MAAO,IAAKC,OAAQ,IAAKC,IAAKC,IAASC,IAAI,4JCtBtD,SAASC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUX,EAASO,EAATP,MAChD,OACEY,EAAAf,EAAAC,cAACe,EAAA,EAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EAAelB,EAAN,MAAiBiB,EAAKE,KAAKC,aAAapB,MACjDqB,EACJb,GAAeS,EAAKE,KAAKC,aAAaZ,YACxC,OACEI,EAAAf,EAAAC,cAACwB,EAAAzB,EAAD,CACE0B,eAAgB,CACdd,QAEFT,MAAOA,EACPwB,cAAa,QAAUP,EAAKE,KAAKC,aAAapB,MAC9CU,KAAM,CACJ,CACEe,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAASR,GAEX,CACES,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAAST,EAAKE,KAAKC,aAAaQ,QAElC,CACEH,KAAM,gBACNC,QAASR,GAEX,CACEO,KAAM,sBACNC,QAASL,IAGVQ,OACClB,EAASmB,OAAS,EACd,CACEL,KAAM,WACNC,QAASf,EAASoB,KAAK,OAEzB,IAELF,OAAOnB,MAvDlBO,KAAAe,IA+DJ1B,EAAI2B,aAAe,CACjBxB,KAAM,KACNC,KAAM,GACNC,SAAU,IAGZL,EAAI4B,UAAY,CACd1B,YAAa2B,IAAUC,OACvB3B,KAAM0B,IAAUC,OAChB1B,KAAMyB,IAAUE,MAChB1B,SAAUwB,IAAUG,QAAQH,IAAUC,QACtCpC,MAAOmC,IAAUC,OAAOG,YAGXjC,MAEf,IAAMS,EAAY,oLCtFlByB,EAAAC,QAAiB/D,EAAAgE,EAAuB","file":"component---src-pages-talks-open-source-js-6b7d8a7f824703e90f71.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport SEO from '../components/SEO';\r\nimport Paragraph from '../components/shared/Paragraph';\r\nimport Anchor from '../components/shared/Anchor';\r\n\r\nimport collage from '../images/shamann-speaker.jpg';\r\n\r\nconst Img = styled.img`\r\n  margin-right: 1rem;\r\n  float: left;\r\n\r\n  @media (max-width: ${props => props.theme.breakpoint}) {\r\n    margin: 0 auto 1rem;\r\n    display: block;\r\n    float: none;\r\n  }\r\n`;\r\n\r\nexport default () => (\r\n  <>\r\n    <SEO title=\"Talks & Open Source\" />\r\n    <Img width={256} height={256} src={collage} alt=\"Collage of several pictures taken at meetups\" />\r\n    <h1>furkans</h1>\r\n     <Img width={256} height={256} src={collage} alt=\"Collage of several pictures taken at meetups\" />\r\n     <h1>furkans</h1>\r\n      <Img width={256} height={256} src={collage} alt=\"Collage of several pictures taken at meetups\" />\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const siteTitle = `${title} | ${data.site.siteMetadata.title}`;\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description;\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: siteTitle,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: 'og:type',\r\n                content: 'website',\r\n              },\r\n              {\r\n                name: 'twitter:card',\r\n                content: 'summary',\r\n              },\r\n              {\r\n                name: 'twitter:creator',\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: 'twitter:title',\r\n                content: siteTitle,\r\n              },\r\n              {\r\n                name: 'twitter:description',\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: 'keywords',\r\n                      content: keywords.join(', '),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: [],\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`;\r\n","module.exports = __webpack_public_path__ + \"static/shamann-speaker-f8204d56f471f7e83e2f6bd843ff404d.jpg\";"],"sourceRoot":""}