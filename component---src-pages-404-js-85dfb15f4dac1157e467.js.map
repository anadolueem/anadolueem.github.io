{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/SEO.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","Img","styled","img","withConfig","displayName","componentId","NotFoundPage","a","createElement","Fragment","title","alt","src","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","siteTitle","site","siteMetadata","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAA,KAKMQ,EAAMC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,cAAAC,YAAA,eAAGJ,CAAH,6DAiBMK,UAVM,kBACnBV,EAAAW,EAAAC,cAAAZ,EAAAW,EAAAE,SAAA,KACEb,EAAAW,EAAAC,cAACT,EAAA,EAAD,CAAKW,MAAM,mBACXd,EAAAW,EAAAC,cAACR,EAAD,CACEW,IAAI,wBACJC,IAAI,qKCZV,SAASC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUR,EAASI,EAATJ,MAChD,OACES,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EAAef,EAAN,MAAiBc,EAAKE,KAAKC,aAAajB,MACjDkB,EACJb,GAAeS,EAAKE,KAAKC,aAAaZ,YACxC,OACEI,EAAAZ,EAAAC,cAACqB,EAAAtB,EAAD,CACEuB,eAAgB,CACdd,QAEFN,MAAOA,EACPqB,cAAa,QAAUP,EAAKE,KAAKC,aAAajB,MAC9CO,KAAM,CACJ,CACEe,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAASR,GAEX,CACES,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAAST,EAAKE,KAAKC,aAAaQ,QAElC,CACEH,KAAM,gBACNC,QAASR,GAEX,CACEO,KAAM,sBACNC,QAASL,IAGVQ,OACClB,EAASmB,OAAS,EACd,CACEL,KAAM,WACNC,QAASf,EAASoB,KAAK,OAEzB,IAELF,OAAOnB,MAvDlBO,KAAAe,IA+DJ1B,EAAI2B,aAAe,CACjBxB,KAAM,KACNC,KAAM,GACNC,SAAU,IAGZL,EAAI4B,UAAY,CACd1B,YAAa2B,IAAUC,OACvB3B,KAAM0B,IAAUC,OAChB1B,KAAMyB,IAAUE,MAChB1B,SAAUwB,IAAUG,QAAQH,IAAUC,QACtCjC,MAAOgC,IAAUC,OAAOG,YAGXjC,MAEf,IAAMS,EAAY","file":"component---src-pages-404-js-85dfb15f4dac1157e467.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport SEO from '../components/SEO';\r\n\r\nconst Img = styled.img`\r\n  margin: 0 auto;\r\n  max-width: 426px;\r\n  width: 100%;\r\n  display: block;\r\n`;\r\n\r\nconst NotFoundPage = () => (\r\n  <>\r\n    <SEO title=\"404: Not found\" />\r\n    <Img\r\n      alt=\"Confused Travolta gif\"\r\n      src=\"https://media.giphy.com/media/hEc4k5pN17GZq/giphy.gif\"\r\n    />\r\n  </>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const siteTitle = `${title} | ${data.site.siteMetadata.title}`;\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description;\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: siteTitle,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: 'og:type',\r\n                content: 'website',\r\n              },\r\n              {\r\n                name: 'twitter:card',\r\n                content: 'summary',\r\n              },\r\n              {\r\n                name: 'twitter:creator',\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: 'twitter:title',\r\n                content: siteTitle,\r\n              },\r\n              {\r\n                name: 'twitter:description',\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: 'keywords',\r\n                      content: keywords.join(', '),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: [],\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}